//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeavyClient.RoutingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResult", Namespace="http://schemas.datacontract.org/2004/07/Routing")]
    [System.SerializableAttribute()]
    public partial class WebResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.RoutingService.Route resultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int code {
            get {
                return this.codeField;
            }
            set {
                if ((this.codeField.Equals(value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.RoutingService.Route result {
            get {
                return this.resultField;
            }
            set {
                if ((object.ReferenceEquals(this.resultField, value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Route", Namespace="http://schemas.datacontract.org/2004/07/Routing")]
    [System.SerializableAttribute()]
    public partial class Route : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double distanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double durationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.RoutingService.Position[] positionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string routeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double distance {
            get {
                return this.distanceField;
            }
            set {
                if ((this.distanceField.Equals(value) != true)) {
                    this.distanceField = value;
                    this.RaisePropertyChanged("distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double duration {
            get {
                return this.durationField;
            }
            set {
                if ((this.durationField.Equals(value) != true)) {
                    this.durationField = value;
                    this.RaisePropertyChanged("duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.RoutingService.Position[] positions {
            get {
                return this.positionsField;
            }
            set {
                if ((object.ReferenceEquals(this.positionsField, value) != true)) {
                    this.positionsField = value;
                    this.RaisePropertyChanged("positions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string route {
            get {
                return this.routeField;
            }
            set {
                if ((object.ReferenceEquals(this.routeField, value) != true)) {
                    this.routeField = value;
                    this.RaisePropertyChanged("route");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/Routing")]
    [System.SerializableAttribute()]
    public partial class Position : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double longitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JCDecauxItem", Namespace="http://schemas.datacontract.org/2004/07/Routing")]
    [System.SerializableAttribute()]
    public partial class JCDecauxItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bankingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contractNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.RoutingService.Stands mainStandsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.RoutingService.Stands overflowStandsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.RoutingService.Position positionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.RoutingService.Stands totalStandsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool banking {
            get {
                return this.bankingField;
            }
            set {
                if ((this.bankingField.Equals(value) != true)) {
                    this.bankingField = value;
                    this.RaisePropertyChanged("banking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bonus {
            get {
                return this.bonusField;
            }
            set {
                if ((this.bonusField.Equals(value) != true)) {
                    this.bonusField = value;
                    this.RaisePropertyChanged("bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contractName {
            get {
                return this.contractNameField;
            }
            set {
                if ((object.ReferenceEquals(this.contractNameField, value) != true)) {
                    this.contractNameField = value;
                    this.RaisePropertyChanged("contractName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.RoutingService.Stands mainStands {
            get {
                return this.mainStandsField;
            }
            set {
                if ((object.ReferenceEquals(this.mainStandsField, value) != true)) {
                    this.mainStandsField = value;
                    this.RaisePropertyChanged("mainStands");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.RoutingService.Stands overflowStands {
            get {
                return this.overflowStandsField;
            }
            set {
                if ((object.ReferenceEquals(this.overflowStandsField, value) != true)) {
                    this.overflowStandsField = value;
                    this.RaisePropertyChanged("overflowStands");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.RoutingService.Position position {
            get {
                return this.positionField;
            }
            set {
                if ((object.ReferenceEquals(this.positionField, value) != true)) {
                    this.positionField = value;
                    this.RaisePropertyChanged("position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.RoutingService.Stands totalStands {
            get {
                return this.totalStandsField;
            }
            set {
                if ((object.ReferenceEquals(this.totalStandsField, value) != true)) {
                    this.totalStandsField = value;
                    this.RaisePropertyChanged("totalStands");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stands", Namespace="http://schemas.datacontract.org/2004/07/Routing")]
    [System.SerializableAttribute()]
    public partial class Stands : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.RoutingService.Availabilities availabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int capacityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.RoutingService.Availabilities availabilities {
            get {
                return this.availabilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.availabilitiesField, value) != true)) {
                    this.availabilitiesField = value;
                    this.RaisePropertyChanged("availabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int capacity {
            get {
                return this.capacityField;
            }
            set {
                if ((this.capacityField.Equals(value) != true)) {
                    this.capacityField = value;
                    this.RaisePropertyChanged("capacity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Availabilities", Namespace="http://schemas.datacontract.org/2004/07/Routing")]
    [System.SerializableAttribute()]
    public partial class Availabilities : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int bikesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int standsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bikes {
            get {
                return this.bikesField;
            }
            set {
                if ((this.bikesField.Equals(value) != true)) {
                    this.bikesField = value;
                    this.RaisePropertyChanged("bikes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int stands {
            get {
                return this.standsField;
            }
            set {
                if ((this.standsField.Equals(value) != true)) {
                    this.standsField = value;
                    this.RaisePropertyChanged("stands");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RoutingService.IRouting")]
    public interface IRouting {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/GetDirectionSOAP", ReplyAction="http://tempuri.org/IRouting/GetDirectionSOAPResponse")]
        HeavyClient.RoutingService.WebResult GetDirectionSOAP(string depart, string arrive, string laVille);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/GetDirectionSOAP", ReplyAction="http://tempuri.org/IRouting/GetDirectionSOAPResponse")]
        System.Threading.Tasks.Task<HeavyClient.RoutingService.WebResult> GetDirectionSOAPAsync(string depart, string arrive, string laVille);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/GetPositionCitySOAP", ReplyAction="http://tempuri.org/IRouting/GetPositionCitySOAPResponse")]
        HeavyClient.RoutingService.Position GetPositionCitySOAP(string laVille);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/GetPositionCitySOAP", ReplyAction="http://tempuri.org/IRouting/GetPositionCitySOAPResponse")]
        System.Threading.Tasks.Task<HeavyClient.RoutingService.Position> GetPositionCitySOAPAsync(string laVille);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/GetHistoriqueStationsSOAP", ReplyAction="http://tempuri.org/IRouting/GetHistoriqueStationsSOAPResponse")]
        System.Collections.Generic.Dictionary<HeavyClient.RoutingService.JCDecauxItem, int> GetHistoriqueStationsSOAP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRouting/GetHistoriqueStationsSOAP", ReplyAction="http://tempuri.org/IRouting/GetHistoriqueStationsSOAPResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<HeavyClient.RoutingService.JCDecauxItem, int>> GetHistoriqueStationsSOAPAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoutingChannel : HeavyClient.RoutingService.IRouting, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoutingClient : System.ServiceModel.ClientBase<HeavyClient.RoutingService.IRouting>, HeavyClient.RoutingService.IRouting {
        
        public RoutingClient() {
        }
        
        public RoutingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoutingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoutingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoutingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HeavyClient.RoutingService.WebResult GetDirectionSOAP(string depart, string arrive, string laVille) {
            return base.Channel.GetDirectionSOAP(depart, arrive, laVille);
        }
        
        public System.Threading.Tasks.Task<HeavyClient.RoutingService.WebResult> GetDirectionSOAPAsync(string depart, string arrive, string laVille) {
            return base.Channel.GetDirectionSOAPAsync(depart, arrive, laVille);
        }
        
        public HeavyClient.RoutingService.Position GetPositionCitySOAP(string laVille) {
            return base.Channel.GetPositionCitySOAP(laVille);
        }
        
        public System.Threading.Tasks.Task<HeavyClient.RoutingService.Position> GetPositionCitySOAPAsync(string laVille) {
            return base.Channel.GetPositionCitySOAPAsync(laVille);
        }
        
        public System.Collections.Generic.Dictionary<HeavyClient.RoutingService.JCDecauxItem, int> GetHistoriqueStationsSOAP() {
            return base.Channel.GetHistoriqueStationsSOAP();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<HeavyClient.RoutingService.JCDecauxItem, int>> GetHistoriqueStationsSOAPAsync() {
            return base.Channel.GetHistoriqueStationsSOAPAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RoutingService.IRoutingREST")]
    public interface IRoutingREST {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoutingREST/GetDirectionREST", ReplyAction="http://tempuri.org/IRoutingREST/GetDirectionRESTResponse")]
        HeavyClient.RoutingService.WebResult GetDirectionREST(string depart, string arrive, string laVille);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoutingREST/GetDirectionREST", ReplyAction="http://tempuri.org/IRoutingREST/GetDirectionRESTResponse")]
        System.Threading.Tasks.Task<HeavyClient.RoutingService.WebResult> GetDirectionRESTAsync(string depart, string arrive, string laVille);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoutingREST/GetPositionCityREST", ReplyAction="http://tempuri.org/IRoutingREST/GetPositionCityRESTResponse")]
        HeavyClient.RoutingService.Position GetPositionCityREST(string laVille);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoutingREST/GetPositionCityREST", ReplyAction="http://tempuri.org/IRoutingREST/GetPositionCityRESTResponse")]
        System.Threading.Tasks.Task<HeavyClient.RoutingService.Position> GetPositionCityRESTAsync(string laVille);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoutingREST/GetHistoriqueStationsREST", ReplyAction="http://tempuri.org/IRoutingREST/GetHistoriqueStationsRESTResponse")]
        System.Collections.Generic.Dictionary<HeavyClient.RoutingService.JCDecauxItem, int> GetHistoriqueStationsREST();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoutingREST/GetHistoriqueStationsREST", ReplyAction="http://tempuri.org/IRoutingREST/GetHistoriqueStationsRESTResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<HeavyClient.RoutingService.JCDecauxItem, int>> GetHistoriqueStationsRESTAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoutingRESTChannel : HeavyClient.RoutingService.IRoutingREST, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoutingRESTClient : System.ServiceModel.ClientBase<HeavyClient.RoutingService.IRoutingREST>, HeavyClient.RoutingService.IRoutingREST {
        
        public RoutingRESTClient() {
        }
        
        public RoutingRESTClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoutingRESTClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoutingRESTClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoutingRESTClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HeavyClient.RoutingService.WebResult GetDirectionREST(string depart, string arrive, string laVille) {
            return base.Channel.GetDirectionREST(depart, arrive, laVille);
        }
        
        public System.Threading.Tasks.Task<HeavyClient.RoutingService.WebResult> GetDirectionRESTAsync(string depart, string arrive, string laVille) {
            return base.Channel.GetDirectionRESTAsync(depart, arrive, laVille);
        }
        
        public HeavyClient.RoutingService.Position GetPositionCityREST(string laVille) {
            return base.Channel.GetPositionCityREST(laVille);
        }
        
        public System.Threading.Tasks.Task<HeavyClient.RoutingService.Position> GetPositionCityRESTAsync(string laVille) {
            return base.Channel.GetPositionCityRESTAsync(laVille);
        }
        
        public System.Collections.Generic.Dictionary<HeavyClient.RoutingService.JCDecauxItem, int> GetHistoriqueStationsREST() {
            return base.Channel.GetHistoriqueStationsREST();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<HeavyClient.RoutingService.JCDecauxItem, int>> GetHistoriqueStationsRESTAsync() {
            return base.Channel.GetHistoriqueStationsRESTAsync();
        }
    }
}
